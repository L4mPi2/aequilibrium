<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="10" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="32623" started-at="2019-12-10T13:19:45 PST" finished-at="2019-12-10T13:20:17 PST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="32623" started-at="2019-12-10T13:19:45 PST" finished-at="2019-12-10T13:20:17 PST">
      <class name="testCases.LoginTestSuite">
        <test-method status="PASS" signature="initialize()[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="initialize" is-config="true" duration-ms="10454" started-at="2019-12-10T13:19:45 PST" finished-at="2019-12-10T13:19:55 PST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="displayedElements()[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="displayedElements" duration-ms="6676" started-at="2019-12-10T13:19:55 PST" finished-at="2019-12-10T13:20:02 PST">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //*[contains(@h4, ' Failed On purpose')]
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Guillermos-MBP.hitronhub.home', ip: 'fd00:a84e:3f46:c252:dcc2:308:27c:a2de%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.6', java.version: '1.8.0_221'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 71.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20191202093317, moz:geckodriverVersion: 0.26.0, moz:headless: false, moz:processID: 28914, moz:profile: /var/folders/hk/wsk9gz351mz..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: MAC, platformName: MAC, platformVersion: 18.7.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 99e8ff63-e7e0-3142-9432-eab18d357cd7
*** Element info: {Using=xpath, value=//*[contains(@h4, ' Failed On purpose')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //*[contains(@h4, ' Failed On purpose')]
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Guillermos-MBP.hitronhub.home', ip: 'fd00:a84e:3f46:c252:dcc2:308:27c:a2de%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.6', java.version: '1.8.0_221'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 71.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20191202093317, moz:geckodriverVersion: 0.26.0, moz:headless: false, moz:processID: 28914, moz:profile: /var/folders/hk/wsk9gz351mz..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: MAC, platformName: MAC, platformVersion: 18.7.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 99e8ff63-e7e0-3142-9432-eab18d357cd7
*** Element info: {Using=xpath, value=//*[contains(@h4, ' Failed On purpose')]}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at pageObjects.LoginPageObjects.getPasswordForAllUsers(LoginPageObjects.java:121)
at testCases.LoginTestSuite.displayedElements(LoginTestSuite.java:65)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayedElements -->
        <test-method status="PASS" signature="takeScreenshoot(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="takeScreenshoot" is-config="true" duration-ms="267" started-at="2019-12-10T13:20:02 PST" finished-at="2019-12-10T13:20:02 PST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=displayedElements status=FAILURE method=LoginTestSuite.displayedElements()[pri:0, instance:testCases.LoginTestSuite@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshoot -->
        <test-method status="FAIL" signature="purchaseHappyPath()[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="purchaseHappyPath" duration-ms="3491" started-at="2019-12-10T13:20:02 PST" finished-at="2019-12-10T13:20:05 PST">
          <exception class="junit.framework.ComparisonFailure">
            <message>
              <![CDATA[expected:<Total: $43.1...> but was:<Item total: $39.9...>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.ComparisonFailure: expected:<Total: $43.1...> but was:<Item total: $39.9...>
at junit.framework.Assert.assertEquals(Assert.java:81)
at junit.framework.Assert.assertEquals(Assert.java:87)
at testCases.LoginTestSuite.purchaseHappyPath(LoginTestSuite.java:231)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseHappyPath -->
        <test-method status="PASS" signature="takeScreenshoot(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="takeScreenshoot" is-config="true" duration-ms="242" started-at="2019-12-10T13:20:05 PST" finished-at="2019-12-10T13:20:06 PST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=purchaseHappyPath status=FAILURE method=LoginTestSuite.purchaseHappyPath()[pri:0, instance:testCases.LoginTestSuite@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshoot -->
        <test-method status="PASS" signature="testLoginInvalidKeys(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="testLoginInvalidKeys" duration-ms="454" started-at="2019-12-10T13:20:06 PST" data-provider="getNonRegisteredUsers" finished-at="2019-12-10T13:20:06 PST">
          <params>
            <param index="0">
              <value>
                <![CDATA[STANDARD_USER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginInvalidKeys -->
        <test-method status="PASS" signature="testLoginInvalidKeys(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="testLoginInvalidKeys" duration-ms="450" started-at="2019-12-10T13:20:06 PST" data-provider="getNonRegisteredUsers" finished-at="2019-12-10T13:20:07 PST">
          <params>
            <param index="0">
              <value>
                <![CDATA[LOCKED_OUT_USER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginInvalidKeys -->
        <test-method status="PASS" signature="takeScreenshoot(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="takeScreenshoot" is-config="true" duration-ms="0" started-at="2019-12-10T13:20:06 PST" finished-at="2019-12-10T13:20:06 PST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginInvalidKeys status=SUCCESS method=LoginTestSuite.testLoginInvalidKeys(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshoot -->
        <test-method status="PASS" signature="testLoginInvalidKeys(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="testLoginInvalidKeys" duration-ms="447" started-at="2019-12-10T13:20:07 PST" data-provider="getNonRegisteredUsers" finished-at="2019-12-10T13:20:07 PST">
          <params>
            <param index="0">
              <value>
                <![CDATA[PROBLEM_USER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginInvalidKeys -->
        <test-method status="PASS" signature="takeScreenshoot(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="takeScreenshoot" is-config="true" duration-ms="0" started-at="2019-12-10T13:20:07 PST" finished-at="2019-12-10T13:20:07 PST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginInvalidKeys status=SUCCESS method=LoginTestSuite.testLoginInvalidKeys(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshoot -->
        <test-method status="PASS" signature="takeScreenshoot(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="takeScreenshoot" is-config="true" duration-ms="1" started-at="2019-12-10T13:20:07 PST" finished-at="2019-12-10T13:20:07 PST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginInvalidKeys status=SUCCESS method=LoginTestSuite.testLoginInvalidKeys(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshoot -->
        <test-method status="PASS" signature="testLoginInvalidKeys(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="testLoginInvalidKeys" duration-ms="468" started-at="2019-12-10T13:20:07 PST" data-provider="getNonRegisteredUsers" finished-at="2019-12-10T13:20:08 PST">
          <params>
            <param index="0">
              <value>
                <![CDATA[PERFORMANCE_GLITCH_USER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginInvalidKeys -->
        <test-method status="PASS" signature="takeScreenshoot(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="takeScreenshoot" is-config="true" duration-ms="0" started-at="2019-12-10T13:20:08 PST" finished-at="2019-12-10T13:20:08 PST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginInvalidKeys status=SUCCESS method=LoginTestSuite.testLoginInvalidKeys(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshoot -->
        <test-method status="PASS" signature="testLoginRightKeys(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="testLoginRightKeys" duration-ms="711" started-at="2019-12-10T13:20:08 PST" data-provider="getRegisteredUsers" finished-at="2019-12-10T13:20:08 PST">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginRightKeys -->
        <test-method status="PASS" signature="takeScreenshoot(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="takeScreenshoot" is-config="true" duration-ms="1" started-at="2019-12-10T13:20:08 PST" finished-at="2019-12-10T13:20:08 PST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginRightKeys status=SUCCESS method=LoginTestSuite.testLoginRightKeys(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshoot -->
        <test-method status="PASS" signature="testLoginRightKeys(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="testLoginRightKeys" duration-ms="5770" started-at="2019-12-10T13:20:08 PST" data-provider="getRegisteredUsers" finished-at="2019-12-10T13:20:14 PST">
          <params>
            <param index="0">
              <value>
                <![CDATA[performance_glitch_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginRightKeys -->
        <test-method status="PASS" signature="takeScreenshoot(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="takeScreenshoot" is-config="true" duration-ms="1" started-at="2019-12-10T13:20:14 PST" finished-at="2019-12-10T13:20:14 PST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginRightKeys status=SUCCESS method=LoginTestSuite.testLoginRightKeys(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshoot -->
        <test-method status="PASS" signature="testLoginRightKeys(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="testLoginRightKeys" duration-ms="867" started-at="2019-12-10T13:20:14 PST" data-provider="getRegisteredUsers" finished-at="2019-12-10T13:20:15 PST">
          <params>
            <param index="0">
              <value>
                <![CDATA[problem_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginRightKeys -->
        <test-method status="PASS" signature="takeScreenshoot(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="takeScreenshoot" is-config="true" duration-ms="0" started-at="2019-12-10T13:20:15 PST" finished-at="2019-12-10T13:20:15 PST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginRightKeys status=SUCCESS method=LoginTestSuite.testLoginRightKeys(java.lang.String, java.lang.String)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshoot -->
        <test-method status="PASS" signature="testMaskedPassword()[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="testMaskedPassword" duration-ms="122" started-at="2019-12-10T13:20:15 PST" finished-at="2019-12-10T13:20:15 PST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaskedPassword -->
        <test-method status="PASS" signature="takeScreenshoot(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="takeScreenshoot" is-config="true" duration-ms="1" started-at="2019-12-10T13:20:15 PST" finished-at="2019-12-10T13:20:15 PST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMaskedPassword status=SUCCESS method=LoginTestSuite.testMaskedPassword()[pri:0, instance:testCases.LoginTestSuite@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshoot -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:testCases.LoginTestSuite@2a17b7b6]" name="teardown" is-config="true" duration-ms="2152" started-at="2019-12-10T13:20:15 PST" finished-at="2019-12-10T13:20:17 PST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- testCases.LoginTestSuite -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
